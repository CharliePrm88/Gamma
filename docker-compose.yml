version: "3.8"
services:
  db:
    image: mysql:8.0.36
    container_name: db
    volumes:
      - ./db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=mysecretpassword # ovviamente in un ambiente di produzione si usano i docker-secret
    ports:
      - "3306:3306"
      - "33060:33060"
    command: --lower_case_table_names=2
    #logging:
    #      driver: "gelf"
    #      options:
    #        gelf-address: "udp://logstash:12201"
    networks:
      - gamma
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    depends_on:
      logstash:
        condition: service_healthy
  keycloak:
    container_name: keycloak
    build:
      context: ./keycloak
      dockerfile: Dockerfile-keycloak
    ports:
      - "8180:8080"
    depends_on:
      db:
        condition: service_healthy
      logstash:
        condition: service_healthy
    networks:
      - gamma
    restart: always
  elasticsearch:
    image: elasticsearch:7.17.18
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: mysecretpassword # ovviamente in un ambiente di produzione si usano i docker-secret
    volumes:
      - ./elastic_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - gamma
  logstash:
    image: logstash:7.17.18
    container_name: logstash
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./logstash/logstash.config:/usr/share/logstash/pipeline/logstash.config
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
      - "4560:4560"
      - "12201:12201/udp"
      - "5140:5140"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - gamma
    command: logstash -f /usr/share/logstash/pipeline/logstash.config
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 3
  kibana:
    image: kibana:7.17.18
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - gamma  
networks:
  gamma:
    driver: bridge