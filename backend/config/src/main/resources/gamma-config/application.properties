keycloak.realm=gamma
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.full-address}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
info.app.version=${build.version}
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
client.name=gamma

spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.auth-server-url}/auth/realms/${keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${gamma.security.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${gamma.security.issuer-uri}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=${gamma.security.issuer-uri}
spring.security.oauth2.client.provider.keycloak.user-info-uri=${gamma.security.issuer-uri}/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=${keycloak.resource}
# Required for micro-services that needs to call another secured micro service call
spring.security.oauth2.client.registration.keycloak.client-id=gamma-app
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.client-name=${spring.security.oauth2.client.registration.keycloak.client-id}
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080
spring.security.oauth2.client.registration.keycloak.provider=keycloak